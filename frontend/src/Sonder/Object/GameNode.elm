-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Sonder.Object.GameNode exposing (blackPlayer, id, lichessId, moves, movesBlur, movesEmt, movesMasterdbMatches, sourcePgn, timeControl, whitePlayer)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Sonder.InputObject
import Sonder.Interface
import Sonder.Object
import Sonder.Scalar
import Sonder.ScalarCodecs
import Sonder.Union


{-| The ID of the object.
-}
id : SelectionSet Sonder.ScalarCodecs.Id Sonder.Object.GameNode
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Sonder.ScalarCodecs.codecs |> Sonder.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| -}
lichessId : SelectionSet String Sonder.Object.GameNode
lichessId =
    Object.selectionForField "String" "lichessId" [] Decode.string


{-| -}
whitePlayer : SelectionSet decodesTo Sonder.Object.PlayerNode -> SelectionSet (Maybe decodesTo) Sonder.Object.GameNode
whitePlayer object_ =
    Object.selectionForCompositeField "whitePlayer" [] object_ (identity >> Decode.nullable)


{-| -}
blackPlayer : SelectionSet decodesTo Sonder.Object.PlayerNode -> SelectionSet (Maybe decodesTo) Sonder.Object.GameNode
blackPlayer object_ =
    Object.selectionForCompositeField "blackPlayer" [] object_ (identity >> Decode.nullable)


{-| -}
timeControl : SelectionSet String Sonder.Object.GameNode
timeControl =
    Object.selectionForField "String" "timeControl" [] Decode.string


{-| -}
sourcePgn : SelectionSet String Sonder.Object.GameNode
sourcePgn =
    Object.selectionForField "String" "sourcePgn" [] Decode.string


{-| -}
moves : SelectionSet (Maybe Sonder.ScalarCodecs.JSONString) Sonder.Object.GameNode
moves =
    Object.selectionForField "(Maybe ScalarCodecs.JSONString)" "moves" [] (Sonder.ScalarCodecs.codecs |> Sonder.Scalar.unwrapCodecs |> .codecJSONString |> .decoder |> Decode.nullable)


{-| -}
movesEmt : SelectionSet (Maybe Sonder.ScalarCodecs.JSONString) Sonder.Object.GameNode
movesEmt =
    Object.selectionForField "(Maybe ScalarCodecs.JSONString)" "movesEmt" [] (Sonder.ScalarCodecs.codecs |> Sonder.Scalar.unwrapCodecs |> .codecJSONString |> .decoder |> Decode.nullable)


{-| -}
movesBlur : SelectionSet (Maybe Sonder.ScalarCodecs.JSONString) Sonder.Object.GameNode
movesBlur =
    Object.selectionForField "(Maybe ScalarCodecs.JSONString)" "movesBlur" [] (Sonder.ScalarCodecs.codecs |> Sonder.Scalar.unwrapCodecs |> .codecJSONString |> .decoder |> Decode.nullable)


{-| -}
movesMasterdbMatches : SelectionSet (Maybe Sonder.ScalarCodecs.JSONString) Sonder.Object.GameNode
movesMasterdbMatches =
    Object.selectionForField "(Maybe ScalarCodecs.JSONString)" "movesMasterdbMatches" [] (Sonder.ScalarCodecs.codecs |> Sonder.Scalar.unwrapCodecs |> .codecJSONString |> .decoder |> Decode.nullable)
