-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Sonder.Object.UserStatus exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Sonder.Enum.AuthStatus
import Sonder.InputObject
import Sonder.Interface
import Sonder.Object
import Sonder.Scalar
import Sonder.ScalarCodecs
import Sonder.Union


status : SelectionSet (Maybe Sonder.Enum.AuthStatus.AuthStatus) Sonder.Object.UserStatus
status =
    Object.selectionForField "(Maybe Enum.AuthStatus.AuthStatus)" "status" [] (Sonder.Enum.AuthStatus.decoder |> Decode.nullable)


preferences : SelectionSet decodesTo Sonder.Object.Preferences -> SelectionSet (Maybe decodesTo) Sonder.Object.UserStatus
preferences object_ =
    Object.selectionForCompositeField "preferences" [] object_ (identity >> Decode.nullable)
