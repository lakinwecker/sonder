-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Sonder.Object.Player exposing (gamesAsBlack, gamesAsWhite, id, totalGames, username)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Sonder.InputObject
import Sonder.Interface
import Sonder.Object
import Sonder.Scalar
import Sonder.ScalarCodecs
import Sonder.Union


{-| -}
id : SelectionSet Sonder.ScalarCodecs.Id Sonder.Object.Player
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Sonder.ScalarCodecs.codecs |> Sonder.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| -}
username : SelectionSet String Sonder.Object.Player
username =
    Object.selectionForField "String" "username" [] Decode.string


{-| -}
gamesAsWhite : SelectionSet decodesTo Sonder.Object.Game -> SelectionSet (List decodesTo) Sonder.Object.Player
gamesAsWhite object_ =
    Object.selectionForCompositeField "gamesAsWhite" [] object_ (identity >> Decode.list)


{-| -}
gamesAsBlack : SelectionSet decodesTo Sonder.Object.Game -> SelectionSet (List decodesTo) Sonder.Object.Player
gamesAsBlack object_ =
    Object.selectionForCompositeField "gamesAsBlack" [] object_ (identity >> Decode.list)


totalGames : SelectionSet Int Sonder.Object.Player
totalGames =
    Object.selectionForField "Int" "totalGames" [] Decode.int
