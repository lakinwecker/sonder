-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Sonder.Object.GameNodeEdge exposing (cursor, node)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Sonder.InputObject
import Sonder.Interface
import Sonder.Object
import Sonder.Scalar
import Sonder.ScalarCodecs
import Sonder.Union


{-| The item at the end of the edge
-}
node : SelectionSet decodesTo Sonder.Object.GameNode -> SelectionSet (Maybe decodesTo) Sonder.Object.GameNodeEdge
node object_ =
    Object.selectionForCompositeField "node" [] object_ (identity >> Decode.nullable)


{-| A cursor for use in pagination
-}
cursor : SelectionSet String Sonder.Object.GameNodeEdge
cursor =
    Object.selectionForField "String" "cursor" [] Decode.string
