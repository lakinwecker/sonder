-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Sonder.Query exposing (games, players)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Sonder.InputObject
import Sonder.Interface
import Sonder.Object
import Sonder.Scalar
import Sonder.ScalarCodecs
import Sonder.Union


players : SelectionSet decodesTo Sonder.Object.Player -> SelectionSet (Maybe (List (Maybe decodesTo))) RootQuery
players object_ =
    Object.selectionForCompositeField "players" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


games : SelectionSet decodesTo Sonder.Object.Game -> SelectionSet (Maybe (List (Maybe decodesTo))) RootQuery
games object_ =
    Object.selectionForCompositeField "games" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
